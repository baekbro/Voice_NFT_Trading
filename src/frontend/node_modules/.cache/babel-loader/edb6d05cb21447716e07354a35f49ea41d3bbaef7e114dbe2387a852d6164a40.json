{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\Legend_Project\\\\Voice_NFT_Trading\\\\src\\\\frontend\\\\src\\\\pages\\\\static\\\\FAQPage.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"../../components/ui/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  background: linear-gradient(\n    to bottom right,\n    var(--emerald-50),\n    var(--white),\n    var(--teal-50)\n  );\n  padding: 2rem 1rem;\n`;\n_c = PageContainer;\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`;\n_c2 = Container;\nconst Title = styled.h1`\n  font-size: 2.5rem;\n  font-weight: bold;\n  text-align: center;\n  margin-bottom: 2rem;\n  background: linear-gradient(to right, var(--emerald-600), var(--teal-600));\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\n_c3 = Title;\nconst FAQPage = () => {\n  const faqs = [{\n    question: \"음성NFT란 무엇인가요?\",\n    answer: \"음성NFT는 블록체인에 저장된 독특한 음성 파일입니다. 각 음성은 고유하며 소유권이 보장됩니다.\"\n  }, {\n    question: \"어떻게 음성NFT를 생성하나요?\",\n    answer: \"음성을 업로드하거나 직접 녹음한 후, AI 검증을 거쳐 블록체인에 민팅할 수 있습니다.\"\n  }, {\n    question: \"로열티는 어떻게 받나요?\",\n    answer: \"음성NFT가 재판매될 때마다 자동으로 로열티가 원작자에게 지급됩니다.\"\n  }];\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uC790\\uC8FC \\uBB3B\\uB294 \\uC9C8\\uBB38\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"1rem\"\n        },\n        children: faqs.map((faq, index) => /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              children: faq.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"var(--gray-600)\"\n              },\n              children: faq.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_c4 = FAQPage;\nexport default FAQPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PageContainer\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"FAQPage\");","map":{"version":3,"names":["React","styled","Card","CardContent","CardHeader","CardTitle","jsxDEV","_jsxDEV","PageContainer","div","_c","Container","_c2","Title","h1","_c3","FAQPage","faqs","question","answer","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexDirection","gap","map","faq","index","color","_c4","$RefreshReg$"],"sources":["C:/study/Legend_Project/Voice_NFT_Trading/src/frontend/src/pages/static/FAQPage.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"../../components/ui/Card\";\r\n\r\nconst PageContainer = styled.div`\r\n  min-height: 100vh;\r\n  background: linear-gradient(\r\n    to bottom right,\r\n    var(--emerald-50),\r\n    var(--white),\r\n    var(--teal-50)\r\n  );\r\n  padding: 2rem 1rem;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n  background: linear-gradient(to right, var(--emerald-600), var(--teal-600));\r\n  background-clip: text;\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n`;\r\n\r\nconst FAQPage = () => {\r\n  const faqs = [\r\n    {\r\n      question: \"음성NFT란 무엇인가요?\",\r\n      answer:\r\n        \"음성NFT는 블록체인에 저장된 독특한 음성 파일입니다. 각 음성은 고유하며 소유권이 보장됩니다.\",\r\n    },\r\n    {\r\n      question: \"어떻게 음성NFT를 생성하나요?\",\r\n      answer:\r\n        \"음성을 업로드하거나 직접 녹음한 후, AI 검증을 거쳐 블록체인에 민팅할 수 있습니다.\",\r\n    },\r\n    {\r\n      question: \"로열티는 어떻게 받나요?\",\r\n      answer:\r\n        \"음성NFT가 재판매될 때마다 자동으로 로열티가 원작자에게 지급됩니다.\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PageContainer>\r\n      <Container>\r\n        <Title>자주 묻는 질문</Title>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"1rem\" }}>\r\n          {faqs.map((faq, index) => (\r\n            <Card key={index}>\r\n              <CardHeader>\r\n                <CardTitle>{faq.question}</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <p style={{ color: \"var(--gray-600)\" }}>{faq.answer}</p>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </Container>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default FAQPage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SACEC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,SAAS,QACJ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,GAAGP,MAAM,CAACQ,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GATIF,aAAa;AAWnB,MAAMG,SAAS,GAAGV,MAAM,CAACQ,GAAG;AAC5B;AACA;AACA,CAAC;AAACG,GAAA,GAHID,SAAS;AAKf,MAAME,KAAK,GAAGZ,MAAM,CAACa,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GATIF,KAAK;AAWX,MAAMG,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAMC,IAAI,GAAG,CACX;IACEC,QAAQ,EAAE,eAAe;IACzBC,MAAM,EACJ;EACJ,CAAC,EACD;IACED,QAAQ,EAAE,mBAAmB;IAC7BC,MAAM,EACJ;EACJ,CAAC,EACD;IACED,QAAQ,EAAE,eAAe;IACzBC,MAAM,EACJ;EACJ,CAAC,CACF;EAED,oBACEZ,OAAA,CAACC,aAAa;IAAAY,QAAA,eACZb,OAAA,CAACI,SAAS;MAAAS,QAAA,gBACRb,OAAA,CAACM,KAAK;QAAAO,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvBjB,OAAA;QAAKkB,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,aAAa,EAAE,QAAQ;UAAEC,GAAG,EAAE;QAAO,CAAE;QAAAR,QAAA,EACnEH,IAAI,CAACY,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnBxB,OAAA,CAACL,IAAI;UAAAkB,QAAA,gBACHb,OAAA,CAACH,UAAU;YAAAgB,QAAA,eACTb,OAAA,CAACF,SAAS;cAAAe,QAAA,EAAEU,GAAG,CAACZ;YAAQ;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACbjB,OAAA,CAACJ,WAAW;YAAAiB,QAAA,eACVb,OAAA;cAAGkB,KAAK,EAAE;gBAAEO,KAAK,EAAE;cAAkB,CAAE;cAAAZ,QAAA,EAAEU,GAAG,CAACX;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC;QAAA,GANLO,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEpB,CAAC;AAACS,GAAA,GAtCIjB,OAAO;AAwCb,eAAeA,OAAO;AAAC,IAAAN,EAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAkB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAnB,GAAA;AAAAmB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}