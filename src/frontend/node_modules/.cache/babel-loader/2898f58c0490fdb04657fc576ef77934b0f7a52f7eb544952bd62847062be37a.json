{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from \"react\";\nimport { showToast, TOAST_MESSAGES } from \"../utils/toast\";\n\n/**\r\n * Custom hook for toast notifications\r\n * Provides easy access to toast functions and common messages\r\n */\nexport const useToast = () => {\n  _s();\n  // Success toast\n  const showSuccess = useCallback(message => {\n    showToast.success(message);\n  }, []);\n\n  // Error toast\n  const showError = useCallback(message => {\n    showToast.error(message);\n  }, []);\n\n  // Warning toast\n  const showWarning = useCallback(message => {\n    showToast.warning(message);\n  }, []);\n\n  // Info toast\n  const showInfo = useCallback(message => {\n    showToast.info(message);\n  }, []);\n\n  // Loading toast\n  const showLoading = useCallback(message => {\n    return showToast.loading(message);\n  }, []);\n\n  // Promise toast\n  const showPromise = useCallback((promise, messages) => {\n    return showToast.promise(promise, messages);\n  }, []);\n\n  // Custom toast\n  const showCustom = useCallback((message, options) => {\n    showToast.custom(message, options);\n  }, []);\n\n  // Dismiss functions\n  const dismiss = useCallback(() => {\n    showToast.dismiss();\n  }, []);\n  const dismissById = useCallback(id => {\n    showToast.dismissById(id);\n  }, []);\n\n  // Common action toasts\n  const showLoginSuccess = useCallback(() => {\n    showToast.success(TOAST_MESSAGES.LOGIN_SUCCESS);\n  }, []);\n  const showLoginError = useCallback(() => {\n    showToast.error(TOAST_MESSAGES.LOGIN_ERROR);\n  }, []);\n  const showLogoutSuccess = useCallback(() => {\n    showToast.success(TOAST_MESSAGES.LOGOUT_SUCCESS);\n  }, []);\n  const showNFTCreated = useCallback(() => {\n    showToast.success(TOAST_MESSAGES.NFT_CREATED);\n  }, []);\n  const showNFTCreateError = useCallback(() => {\n    showToast.error(TOAST_MESSAGES.NFT_CREATE_ERROR);\n  }, []);\n  const showNFTPurchased = useCallback(() => {\n    showToast.success(TOAST_MESSAGES.NFT_PURCHASED);\n  }, []);\n  const showNFTPurchaseError = useCallback(() => {\n    showToast.error(TOAST_MESSAGES.NFT_PURCHASE_ERROR);\n  }, []);\n  const showTTSGenerated = useCallback(() => {\n    showToast.success(TOAST_MESSAGES.TTS_GENERATED);\n  }, []);\n  const showTTSError = useCallback(() => {\n    showToast.error(TOAST_MESSAGES.TTS_ERROR);\n  }, []);\n  const showSaveSuccess = useCallback(() => {\n    showToast.success(TOAST_MESSAGES.SAVE_SUCCESS);\n  }, []);\n  const showSaveError = useCallback(() => {\n    showToast.error(TOAST_MESSAGES.SAVE_ERROR);\n  }, []);\n  const showCopySuccess = useCallback(() => {\n    showToast.success(TOAST_MESSAGES.COPY_SUCCESS);\n  }, []);\n  const showNetworkError = useCallback(() => {\n    showToast.error(TOAST_MESSAGES.NETWORK_ERROR);\n  }, []);\n  const showUnexpectedError = useCallback(() => {\n    showToast.error(TOAST_MESSAGES.UNEXPECTED_ERROR);\n  }, []);\n  return {\n    // Basic toast functions\n    showSuccess,\n    showError,\n    showWarning,\n    showInfo,\n    showLoading,\n    showPromise,\n    showCustom,\n    dismiss,\n    dismissById,\n    // Common action toasts\n    showLoginSuccess,\n    showLoginError,\n    showLogoutSuccess,\n    showNFTCreated,\n    showNFTCreateError,\n    showNFTPurchased,\n    showNFTPurchaseError,\n    showTTSGenerated,\n    showTTSError,\n    showSaveSuccess,\n    showSaveError,\n    showCopySuccess,\n    showNetworkError,\n    showUnexpectedError\n  };\n};\n_s(useToast, \"Q2qjBAzxXZp/pbDYpS/cpV5EfDA=\");\nexport default useToast;","map":{"version":3,"names":["useCallback","showToast","TOAST_MESSAGES","useToast","_s","showSuccess","message","success","showError","error","showWarning","warning","showInfo","info","showLoading","loading","showPromise","promise","messages","showCustom","options","custom","dismiss","dismissById","id","showLoginSuccess","LOGIN_SUCCESS","showLoginError","LOGIN_ERROR","showLogoutSuccess","LOGOUT_SUCCESS","showNFTCreated","NFT_CREATED","showNFTCreateError","NFT_CREATE_ERROR","showNFTPurchased","NFT_PURCHASED","showNFTPurchaseError","NFT_PURCHASE_ERROR","showTTSGenerated","TTS_GENERATED","showTTSError","TTS_ERROR","showSaveSuccess","SAVE_SUCCESS","showSaveError","SAVE_ERROR","showCopySuccess","COPY_SUCCESS","showNetworkError","NETWORK_ERROR","showUnexpectedError","UNEXPECTED_ERROR"],"sources":["C:/study/Legend_Project/Voice_NFT_Trading/src/frontend/src/hooks/useToast.js"],"sourcesContent":["import { useCallback } from \"react\";\r\nimport { showToast, TOAST_MESSAGES } from \"../utils/toast\";\r\n\r\n/**\r\n * Custom hook for toast notifications\r\n * Provides easy access to toast functions and common messages\r\n */\r\nexport const useToast = () => {\r\n  // Success toast\r\n  const showSuccess = useCallback((message) => {\r\n    showToast.success(message);\r\n  }, []);\r\n\r\n  // Error toast\r\n  const showError = useCallback((message) => {\r\n    showToast.error(message);\r\n  }, []);\r\n\r\n  // Warning toast\r\n  const showWarning = useCallback((message) => {\r\n    showToast.warning(message);\r\n  }, []);\r\n\r\n  // Info toast\r\n  const showInfo = useCallback((message) => {\r\n    showToast.info(message);\r\n  }, []);\r\n\r\n  // Loading toast\r\n  const showLoading = useCallback((message) => {\r\n    return showToast.loading(message);\r\n  }, []);\r\n\r\n  // Promise toast\r\n  const showPromise = useCallback((promise, messages) => {\r\n    return showToast.promise(promise, messages);\r\n  }, []);\r\n\r\n  // Custom toast\r\n  const showCustom = useCallback((message, options) => {\r\n    showToast.custom(message, options);\r\n  }, []);\r\n\r\n  // Dismiss functions\r\n  const dismiss = useCallback(() => {\r\n    showToast.dismiss();\r\n  }, []);\r\n\r\n  const dismissById = useCallback((id) => {\r\n    showToast.dismissById(id);\r\n  }, []);\r\n\r\n  // Common action toasts\r\n  const showLoginSuccess = useCallback(() => {\r\n    showToast.success(TOAST_MESSAGES.LOGIN_SUCCESS);\r\n  }, []);\r\n\r\n  const showLoginError = useCallback(() => {\r\n    showToast.error(TOAST_MESSAGES.LOGIN_ERROR);\r\n  }, []);\r\n\r\n  const showLogoutSuccess = useCallback(() => {\r\n    showToast.success(TOAST_MESSAGES.LOGOUT_SUCCESS);\r\n  }, []);\r\n\r\n  const showNFTCreated = useCallback(() => {\r\n    showToast.success(TOAST_MESSAGES.NFT_CREATED);\r\n  }, []);\r\n\r\n  const showNFTCreateError = useCallback(() => {\r\n    showToast.error(TOAST_MESSAGES.NFT_CREATE_ERROR);\r\n  }, []);\r\n\r\n  const showNFTPurchased = useCallback(() => {\r\n    showToast.success(TOAST_MESSAGES.NFT_PURCHASED);\r\n  }, []);\r\n\r\n  const showNFTPurchaseError = useCallback(() => {\r\n    showToast.error(TOAST_MESSAGES.NFT_PURCHASE_ERROR);\r\n  }, []);\r\n\r\n  const showTTSGenerated = useCallback(() => {\r\n    showToast.success(TOAST_MESSAGES.TTS_GENERATED);\r\n  }, []);\r\n\r\n  const showTTSError = useCallback(() => {\r\n    showToast.error(TOAST_MESSAGES.TTS_ERROR);\r\n  }, []);\r\n\r\n  const showSaveSuccess = useCallback(() => {\r\n    showToast.success(TOAST_MESSAGES.SAVE_SUCCESS);\r\n  }, []);\r\n\r\n  const showSaveError = useCallback(() => {\r\n    showToast.error(TOAST_MESSAGES.SAVE_ERROR);\r\n  }, []);\r\n\r\n  const showCopySuccess = useCallback(() => {\r\n    showToast.success(TOAST_MESSAGES.COPY_SUCCESS);\r\n  }, []);\r\n\r\n  const showNetworkError = useCallback(() => {\r\n    showToast.error(TOAST_MESSAGES.NETWORK_ERROR);\r\n  }, []);\r\n\r\n  const showUnexpectedError = useCallback(() => {\r\n    showToast.error(TOAST_MESSAGES.UNEXPECTED_ERROR);\r\n  }, []);\r\n\r\n  return {\r\n    // Basic toast functions\r\n    showSuccess,\r\n    showError,\r\n    showWarning,\r\n    showInfo,\r\n    showLoading,\r\n    showPromise,\r\n    showCustom,\r\n    dismiss,\r\n    dismissById,\r\n\r\n    // Common action toasts\r\n    showLoginSuccess,\r\n    showLoginError,\r\n    showLogoutSuccess,\r\n    showNFTCreated,\r\n    showNFTCreateError,\r\n    showNFTPurchased,\r\n    showNFTPurchaseError,\r\n    showTTSGenerated,\r\n    showTTSError,\r\n    showSaveSuccess,\r\n    showSaveError,\r\n    showCopySuccess,\r\n    showNetworkError,\r\n    showUnexpectedError,\r\n  };\r\n};\r\n\r\nexport default useToast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}