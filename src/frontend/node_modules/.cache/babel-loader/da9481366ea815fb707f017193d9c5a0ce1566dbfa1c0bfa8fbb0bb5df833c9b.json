{"ast":null,"code":"import toast from \"react-hot-toast\";\n\n// Toast utility functions with predefined styles and messages\nexport const showToast = {\n  // Success messages\n  success: message => toast.success(message, {\n    duration: 4000,\n    position: \"top-right\",\n    style: {\n      background: \"#10B981\",\n      color: \"#fff\",\n      fontWeight: \"500\"\n    }\n  }),\n  // Error messages\n  error: message => toast.error(message, {\n    duration: 5000,\n    position: \"top-right\",\n    style: {\n      background: \"#EF4444\",\n      color: \"#fff\",\n      fontWeight: \"500\"\n    }\n  }),\n  // Warning messages\n  warning: message => toast(message, {\n    duration: 4000,\n    position: \"top-right\",\n    icon: \"⚠️\",\n    style: {\n      background: \"#F59E0B\",\n      color: \"#fff\",\n      fontWeight: \"500\"\n    }\n  }),\n  // Info messages\n  info: message => toast(message, {\n    duration: 4000,\n    position: \"top-right\",\n    icon: \"ℹ️\",\n    style: {\n      background: \"#3B82F6\",\n      color: \"#fff\",\n      fontWeight: \"500\"\n    }\n  }),\n  // Loading messages\n  loading: message => toast.loading(message, {\n    position: \"top-right\",\n    style: {\n      background: \"#6B7280\",\n      color: \"#fff\",\n      fontWeight: \"500\"\n    }\n  }),\n  // Promise-based toast\n  promise: (promise, messages) => toast.promise(promise, {\n    loading: messages.loading || \"Loading...\",\n    success: messages.success || \"Success!\",\n    error: messages.error || \"Something went wrong!\"\n  }, {\n    position: \"top-right\",\n    style: {\n      fontWeight: \"500\"\n    },\n    success: {\n      style: {\n        background: \"#10B981\",\n        color: \"#fff\"\n      }\n    },\n    error: {\n      style: {\n        background: \"#EF4444\",\n        color: \"#fff\"\n      }\n    }\n  }),\n  // Custom toast with custom styling\n  custom: (message, options = {}) => toast(message, {\n    duration: 4000,\n    position: \"top-right\",\n    ...options\n  }),\n  // Dismiss all toasts\n  dismiss: () => toast.dismiss(),\n  // Dismiss specific toast\n  dismissById: id => toast.dismiss(id)\n};\n\n// Predefined common messages\nexport const TOAST_MESSAGES = {\n  // Auth messages\n  LOGIN_SUCCESS: \"Successfully logged in!\",\n  LOGIN_ERROR: \"Login failed. Please try again.\",\n  LOGOUT_SUCCESS: \"Successfully logged out!\",\n  // NFT messages\n  NFT_CREATED: \"NFT created successfully!\",\n  NFT_CREATE_ERROR: \"Failed to create NFT. Please try again.\",\n  NFT_PURCHASED: \"NFT purchased successfully!\",\n  NFT_PURCHASE_ERROR: \"Failed to purchase NFT. Please try again.\",\n  // TTS messages\n  TTS_GENERATED: \"Audio generated successfully!\",\n  TTS_ERROR: \"Failed to generate audio. Please try again.\",\n  // General messages\n  SAVE_SUCCESS: \"Changes saved successfully!\",\n  SAVE_ERROR: \"Failed to save changes. Please try again.\",\n  COPY_SUCCESS: \"Copied to clipboard!\",\n  NETWORK_ERROR: \"Network error. Please check your connection.\",\n  UNEXPECTED_ERROR: \"An unexpected error occurred. Please try again.\"\n};\nexport default showToast;","map":{"version":3,"names":["toast","showToast","success","message","duration","position","style","background","color","fontWeight","error","warning","icon","info","loading","promise","messages","custom","options","dismiss","dismissById","id","TOAST_MESSAGES","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT_SUCCESS","NFT_CREATED","NFT_CREATE_ERROR","NFT_PURCHASED","NFT_PURCHASE_ERROR","TTS_GENERATED","TTS_ERROR","SAVE_SUCCESS","SAVE_ERROR","COPY_SUCCESS","NETWORK_ERROR","UNEXPECTED_ERROR"],"sources":["C:/study/Legend_Project/Voice_NFT_Trading/src/frontend/src/utils/toast.js"],"sourcesContent":["import toast from \"react-hot-toast\";\r\n\r\n// Toast utility functions with predefined styles and messages\r\nexport const showToast = {\r\n  // Success messages\r\n  success: (message) =>\r\n    toast.success(message, {\r\n      duration: 4000,\r\n      position: \"top-right\",\r\n      style: {\r\n        background: \"#10B981\",\r\n        color: \"#fff\",\r\n        fontWeight: \"500\",\r\n      },\r\n    }),\r\n\r\n  // Error messages\r\n  error: (message) =>\r\n    toast.error(message, {\r\n      duration: 5000,\r\n      position: \"top-right\",\r\n      style: {\r\n        background: \"#EF4444\",\r\n        color: \"#fff\",\r\n        fontWeight: \"500\",\r\n      },\r\n    }),\r\n\r\n  // Warning messages\r\n  warning: (message) =>\r\n    toast(message, {\r\n      duration: 4000,\r\n      position: \"top-right\",\r\n      icon: \"⚠️\",\r\n      style: {\r\n        background: \"#F59E0B\",\r\n        color: \"#fff\",\r\n        fontWeight: \"500\",\r\n      },\r\n    }),\r\n\r\n  // Info messages\r\n  info: (message) =>\r\n    toast(message, {\r\n      duration: 4000,\r\n      position: \"top-right\",\r\n      icon: \"ℹ️\",\r\n      style: {\r\n        background: \"#3B82F6\",\r\n        color: \"#fff\",\r\n        fontWeight: \"500\",\r\n      },\r\n    }),\r\n\r\n  // Loading messages\r\n  loading: (message) =>\r\n    toast.loading(message, {\r\n      position: \"top-right\",\r\n      style: {\r\n        background: \"#6B7280\",\r\n        color: \"#fff\",\r\n        fontWeight: \"500\",\r\n      },\r\n    }),\r\n\r\n  // Promise-based toast\r\n  promise: (promise, messages) =>\r\n    toast.promise(\r\n      promise,\r\n      {\r\n        loading: messages.loading || \"Loading...\",\r\n        success: messages.success || \"Success!\",\r\n        error: messages.error || \"Something went wrong!\",\r\n      },\r\n      {\r\n        position: \"top-right\",\r\n        style: {\r\n          fontWeight: \"500\",\r\n        },\r\n        success: {\r\n          style: {\r\n            background: \"#10B981\",\r\n            color: \"#fff\",\r\n          },\r\n        },\r\n        error: {\r\n          style: {\r\n            background: \"#EF4444\",\r\n            color: \"#fff\",\r\n          },\r\n        },\r\n      }\r\n    ),\r\n\r\n  // Custom toast with custom styling\r\n  custom: (message, options = {}) =>\r\n    toast(message, {\r\n      duration: 4000,\r\n      position: \"top-right\",\r\n      ...options,\r\n    }),\r\n\r\n  // Dismiss all toasts\r\n  dismiss: () => toast.dismiss(),\r\n\r\n  // Dismiss specific toast\r\n  dismissById: (id) => toast.dismiss(id),\r\n};\r\n\r\n// Predefined common messages\r\nexport const TOAST_MESSAGES = {\r\n  // Auth messages\r\n  LOGIN_SUCCESS: \"Successfully logged in!\",\r\n  LOGIN_ERROR: \"Login failed. Please try again.\",\r\n  LOGOUT_SUCCESS: \"Successfully logged out!\",\r\n\r\n  // NFT messages\r\n  NFT_CREATED: \"NFT created successfully!\",\r\n  NFT_CREATE_ERROR: \"Failed to create NFT. Please try again.\",\r\n  NFT_PURCHASED: \"NFT purchased successfully!\",\r\n  NFT_PURCHASE_ERROR: \"Failed to purchase NFT. Please try again.\",\r\n\r\n  // TTS messages\r\n  TTS_GENERATED: \"Audio generated successfully!\",\r\n  TTS_ERROR: \"Failed to generate audio. Please try again.\",\r\n\r\n  // General messages\r\n  SAVE_SUCCESS: \"Changes saved successfully!\",\r\n  SAVE_ERROR: \"Failed to save changes. Please try again.\",\r\n  COPY_SUCCESS: \"Copied to clipboard!\",\r\n  NETWORK_ERROR: \"Network error. Please check your connection.\",\r\n  UNEXPECTED_ERROR: \"An unexpected error occurred. Please try again.\",\r\n};\r\n\r\nexport default showToast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}